// Place your key bindings in this file to override the defaults
[
    {
        "key": "space p",
        "command": "workbench.action.quickOpen",
        "when": "!inputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "multiCommand.pageUp",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d",
        "command": "multiCommand.pageDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "space ;",
        "command": "workbench.action.showCommands",
        "when": "!inputFocus"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "w",
        "command": "workbench.debug.viewlet.action.addWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "alt+d alt+d",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus"
    },
    {
        "key": "space shift+c",
        "command": "workbench.action.chat.open",
        "when": "chatPanelParticipantRegistered && !inputFocus || chatSetupInstalled && !inputFocus"
    },
    {
        "key": "ctrl+alt+i",
        "command": "-workbench.action.chat.open",
        "when": "chatPanelParticipantRegistered || chatSetupInstalled"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-workbench.action.chat.openEditSession",
        "when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "alt+d",
        "command": "-gl.openChat",
        "when": "config.gitlab.duoChat.enabled && gitlab:chatAvailable && gitlab:chatAvailableForProject"
    },
    {
        "key": "alt+c",
        "command": "-gl.openQuickChatWithShortcut",
        "when": "config.gitlab.duoChat.enabled && gitlab:chatAvailable && gitlab:chatAvailableForProject"
    },
    {
        "key": "ctrl+.",
        "command": "-notebook.cell.openFailureActions",
        "when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused"
    },
    {
        "key": "alt+f1",
        "command": "-editor.action.accessibilityHelp",
        "when": "!accessibilityHelpIsShown"
    },
    {
        "key": "alt+f2",
        "command": "-editor.action.accessibleView"
    },
    {
        "key": "ctrl+k ctrl+f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "space a",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!inputFocus && !codeium.chatPanelView.active"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "space g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active && !inputFocus"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+; ctrl+a",
        "command": "-testing.debugAll"
    },
    {
        "key": "ctrl+; ctrl+e",
        "command": "-testing.debugFailTests"
    },
    {
        "key": "ctrl+; ctrl+l",
        "command": "-testing.debugLastRun"
    },
    {
        "key": "ctrl+; ctrl+c",
        "command": "-testing.debugAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+f",
        "command": "-testing.debugCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+m",
        "command": "-testing.openOutputPeek"
    },
    {
        "key": "ctrl+; ctrl+r",
        "command": "-testing.refreshTests",
        "when": "testing.canRefresh"
    },
    {
        "key": "ctrl+; e",
        "command": "-testing.reRunFailTests"
    },
    {
        "key": "ctrl+; l",
        "command": "-testing.reRunLastRun"
    },
    {
        "key": "ctrl+; ctrl+shift+l",
        "command": "-testing.coverageLastRun"
    },
    {
        "key": "ctrl+; a",
        "command": "-testing.runAll"
    },
    {
        "key": "ctrl+; ctrl+shift+a",
        "command": "-testing.coverageAll"
    },
    {
        "key": "ctrl+; c",
        "command": "-testing.runAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+shift+c",
        "command": "-testing.coverageAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; f",
        "command": "-testing.runCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+shift+f",
        "command": "-testing.coverageCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+o",
        "command": "-testing.showMostRecentOutput",
        "when": "testing.hasAnyResults"
    },
    {
        "key": "ctrl+; ctrl+shift+i",
        "command": "-testing.toggleInlineCoverage"
    },
    {
        "key": "ctrl+; ctrl+i",
        "command": "-testing.toggleInlineTestOutput"
    },
    {
        "key": "ctrl+; ctrl+x",
        "command": "-testing.cancelRun"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarFocus"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "ctrl+f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
    },
    {
        "key": "ctrl+k f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+f4",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "space x",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled && !inputFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "space shift+x",
        "command": "workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled && !inputFocus"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "space shift+d",
        "command": "workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled && !inputFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "down",
        "command": "-notebook.focusNextEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
        "key": "alt+e",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "vim.mode == Normal"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+e",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown"
    },
    {
        "key": "alt+[",
        "command": "-github.copilot.previousPanelSolution",
        "when": "github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
    },
    {
        "key": "alt+[",
        "command": "-editor.action.accessibleViewPrevious",
        "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
    },
    {
        "key": "alt+[",
        "command": "-editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+]",
        "command": "-github.copilot.nextPanelSolution",
        "when": "github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
    },
    {
        "key": "alt+]",
        "command": "-editor.action.accessibleViewNext",
        "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
    },
    {
        "key": "alt+]",
        "command": "-editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+space",
        "command": "-focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+shift+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+shift+.",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+; c",
        "command": "remote-containers.reopenInContainer"
    },
    {
        "key": "ctrl+; ctrl+c",
        "command": "remote-containers.rebuildAndReopenInContainer"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+.",
        "command": "-editor.action.autoFix",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
    },
    {
        "key": "ctrl+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+,",
        "command": "-workbench.action.openSettings"
    },
    {
        "key": "ctrl+,",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+.",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+]",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+[",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "alt+]",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "alt+[",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+shift+]",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+shift+[",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+alt+]",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "shift+alt+[",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+alt+]",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+[",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "up",
        "command": "focusPreviousRenameSuggestion",
        "when": "renameInputVisible"
    },
    {
        "key": "up",
        "command": "-focusPreviousRenameSuggestion",
        "when": "renameInputVisible"
    },
    {
        "key": "down",
        "command": "focusNextRenameSuggestion",
        "when": "renameInputVisible"
    },
    {
        "key": "down",
        "command": "-focusNextRenameSuggestion",
        "when": "renameInputVisible"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+shift+alt+p",
        "command": "-tab-switcher.go.numbered"
    },
    {
        "key": "alt+l",
        "command": "keybindings.editor.copyCommandKeybindingEntry"
    },
    {
        "key": "ctrl+; shift+c",
        "command": "remote-containers.reopenLocally"
    },
    {
        "key": "ctrl+[",
        "command": "github.copilot.nextPanelSolution",
        "when": "focus workbench.panel.chat.view.copilot.active"
    },
    {
        "key": "ctrl+[",
        "command": "github.copilot.nextPanelSolution",
        "when": "workbench.panel.chat.view.copilot.active"
    },
    {
        "key": "ctrl+shift+alt+\\",
        "command": "workbench.explorer.openEditorsView.toggleVisibility"
    },
    {
        "key": "ctrl+shift+alt+\\",
        "command": "editor.action.reindentselectedlines"
    },
    {
        "key": "ctrl+d v",
        "command": "workbench.debug.action.focusVariablesView",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+d w",
        "command": "workbench.debug.action.focusWatchView",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+d b",
        "command": "workbench.debug.action.focusBreakpointsView",
        "when": "sideBarFocus"
    },
    {
        "key": "x",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused && !expressionSelected"
    },
    {
        "key": "delete",
        "command": "-debug.removeWatchExpression",
        "when": "watchExpressionsFocused && !expressionSelected"
    },
    {
        "key": "capslock capslock",
        "command": "debug.addToWatchExpressions",
        "when": "variablesFocused"
    },
    {
        "key": "ctrl+up",
        "command": "chat.action.focus",
        "when": "inChatInput && !quickChatHasFocus"
    },
    {
        "key": "ctrl+up",
        "command": "-chat.action.focus",
        "when": "inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus"
    },
    {
        "key": "ctrl+up",
        "command": "chat.action.focus",
        "when": "chatCursorAtTop && inChatInput && !quickChatHasFocus"
    },
    {
        "key": "ctrl+up",
        "command": "-chat.action.focus",
        "when": "chatCursorAtTop && inChatInput && !quickChatHasFocus"
    },
    {
        "key": "ctrl+down",
        "command": "chat.action.focus",
        "when": "inChat && inChatInput && quickChatHasFocus"
    },
    {
        "key": "ctrl+down",
        "command": "-chat.action.focus",
        "when": "inChat && inChatInput && quickChatHasFocus"
    },
    {
        "key": "escape l",
        "command": "togglefold",
        "when": "panelFocus"
    },
    {
        "key": "ctrl+n",
        "command": "quickInput.next",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "down",
        "command": "-quickInput.next",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+p",
        "command": "quickInput.previous",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "up",
        "command": "-quickInput.previous",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "shift+r",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "f2",
        "command": "-renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "delete",
        "command": "-moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+v",
        "command": "-filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+c",
        "command": "-filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "shift+n",
        "command": "explorer.newFolder",
        "when": "!inputFocus"
    },
    {
        "key": "n",
        "command": "explorer.newFile",
        "when": "!inputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "extension.vim_ctrl+space",
        "when": "editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+space",
        "command": "-extension.vim_ctrl+space",
        "when": "editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "space space",
        "command": "workbench.action.showAllEditors",
        "when": "!inputFocus"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "space =",
        "command": "editor.action.formatSelection.multiple",
        "when": "!inputFocus"
    },
    {
        "key": "space f",
        "command": "workbench.action.quickOpen",
        "args": "%",
        "when": "!inputFocus"
    },
    {
        "key": "backspace",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!codeium.chatPanelView.active && !inputFocus"
    },
    {
        "key": "k",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "up",
        "command": "-editor.action.scrollUpHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "j",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "down",
        "command": "-editor.action.scrollDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+shift+;",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "space t",
        "command": "workbench.action.files.newUntitledFile",
        "when": "!inputFocus && !codeium.chatPanelView.active"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+y",
        "command": "acceptSelectedSuggestion",
        "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "key": "enter",
        "command": "-acceptSelectedSuggestion",
        "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "!sideBarFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "!panelFocus && !terminalFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+s v",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    },
]
